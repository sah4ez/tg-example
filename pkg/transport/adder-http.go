// GENERATED BY 'T'ransport 'G'enerator. DO NOT EDIT.
package transport

import (
	"github.com/gofiber/fiber/v2"
	"github.com/sah4ez/tg-example/pkg/interfaces"
)

type httpAdder struct {
	errorHandler     ErrorHandler
	maxBatchSize     int
	maxParallelBatch int
	svc              *serverAdder
	base             interfaces.Adder
}

func NewAdder(svcAdder interfaces.Adder) (srv *httpAdder) {

	srv = &httpAdder{
		base: svcAdder,
		svc:  newServerAdder(svcAdder),
	}
	return
}

func (http httpAdder) Service() MiddlewareSetAdder {
	return http.svc
}

func (http *httpAdder) WithLog() *httpAdder {
	http.svc.WithLog()
	return http
}

func (http *httpAdder) WithErrorHandler(handler ErrorHandler) *httpAdder {
	http.errorHandler = handler
	return http
}

func (http *httpAdder) SetRoutes(route *fiber.App) {
	route.Get("/api/v1/sum", http.serveSum)
}
