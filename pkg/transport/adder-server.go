// GENERATED BY 'T'ransport 'G'enerator. DO NOT EDIT.
package transport

import (
	"context"

	"github.com/sah4ez/tg-example/pkg/interfaces"
)

type serverAdder struct {
	svc interfaces.Adder
	sum AdderSum
}

type MiddlewareSetAdder interface {
	Wrap(m MiddlewareAdder)
	WrapSum(m MiddlewareAdderSum)

	WithLog()
}

func newServerAdder(svc interfaces.Adder) *serverAdder {
	return &serverAdder{
		sum: svc.Sum,
		svc: svc,
	}
}

func (srv *serverAdder) Wrap(m MiddlewareAdder) {
	srv.svc = m(srv.svc)
	srv.sum = srv.svc.Sum
}

func (srv *serverAdder) Sum(ctx context.Context, aInt int, bInt int) (c int, err error) {
	return srv.sum(ctx, aInt, bInt)
}

func (srv *serverAdder) WrapSum(m MiddlewareAdderSum) {
	srv.sum = m(srv.sum)
}

func (srv *serverAdder) WithLog() {
	srv.Wrap(loggerMiddlewareAdder())
}
