// GENERATED BY 'T'ransport 'G'enerator. DO NOT EDIT.
package transport

import (
	"context"

	"github.com/rs/zerolog"
	"github.com/sah4ez/tg-example/pkg/interfaces"
)

type serverAdder struct {
	svc interfaces.Adder
	add AdderAdd
}

type MiddlewareSetAdder interface {
	Wrap(m MiddlewareAdder)
	WrapAdd(m MiddlewareAdderAdd)

	WithLog(log zerolog.Logger)
}

func newServerAdder(svc interfaces.Adder) *serverAdder {
	return &serverAdder{
		add: svc.Add,
		svc: svc,
	}
}

func (srv *serverAdder) Wrap(m MiddlewareAdder) {
	srv.svc = m(srv.svc)
	srv.add = srv.svc.Add
}

func (srv *serverAdder) Add(ctx context.Context, a int, b int) (c int, err error) {
	return srv.add(ctx, a, b)
}

func (srv *serverAdder) WrapAdd(m MiddlewareAdderAdd) {
	srv.add = m(srv.add)
}

func (srv *serverAdder) WithLog(log zerolog.Logger) {
	srv.Wrap(loggerMiddlewareAdder(log))
}
