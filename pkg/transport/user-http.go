// GENERATED BY 'T'ransport 'G'enerator. DO NOT EDIT.
package transport

import (
	"github.com/gofiber/fiber/v2"
	"github.com/sah4ez/tg-example/pkg/interfaces"
)

type httpUser struct {
	errorHandler     ErrorHandler
	maxBatchSize     int
	maxParallelBatch int
	svc              *serverUser
	base             interfaces.User
}

func NewUser(svcUser interfaces.User) (srv *httpUser) {

	srv = &httpUser{
		base: svcUser,
		svc:  newServerUser(svcUser),
	}
	return
}

func (http *httpUser) Service() MiddlewareSetUser {
	return http.svc
}

func (http *httpUser) WithLog() *httpUser {
	http.svc.WithLog()
	return http
}

func (http *httpUser) WithErrorHandler(handler ErrorHandler) *httpUser {
	http.errorHandler = handler
	return http
}

func (http *httpUser) SetRoutes(route *fiber.App) {
	route.Post("/api/v1/user", http.serveBatch)
	route.Post("/api/v1/user/getUserNameByID", http.serveGetUserNameByID)
}
