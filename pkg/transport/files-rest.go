// GENERATED BY 'T'ransport 'G'enerator. DO NOT EDIT.
package transport

import (
	"context"

	"github.com/gofiber/fiber/v2"
)

func (http *httpFiles) getTemplate(ctx context.Context, request requestFilesGetTemplate) (response responseFilesGetTemplate, err error) {

	response.Data, response.Name, err = http.svc.GetTemplate(ctx)
	if err != nil {
		if http.errorHandler != nil {
			err = http.errorHandler(err)
		}
	}
	return
}
func (http *httpFiles) serveGetTemplate(ctx *fiber.Ctx) (err error) {

	var request requestFilesGetTemplate
	ctx.Response().SetStatusCode(200)

	var response responseFilesGetTemplate
	if response, err = http.getTemplate(ctx.UserContext(), request); err == nil {
		var iResponse interface{} = response
		if redirect, ok := iResponse.(withRedirect); ok {
			return ctx.Redirect(redirect.RedirectTo())
		}
		return sendResponse(ctx, response)
	}
	if errCoder, ok := err.(withErrorCode); ok {
		ctx.Status(errCoder.Code())
	} else {
		ctx.Status(fiber.StatusInternalServerError)
	}
	return sendResponse(ctx, err)
}
