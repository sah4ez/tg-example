// GENERATED BY 'T'ransport 'G'enerator. DO NOT EDIT.
package transport

import (
	"github.com/gofiber/fiber/v2"
	"github.com/sah4ez/tg-example/pkg/interfaces"
)

type httpFiles struct {
	errorHandler     ErrorHandler
	maxBatchSize     int
	maxParallelBatch int
	svc              *serverFiles
	base             interfaces.Files
}

func NewFiles(svcFiles interfaces.Files) (srv *httpFiles) {

	srv = &httpFiles{
		base: svcFiles,
		svc:  newServerFiles(svcFiles),
	}
	return
}

func (http *httpFiles) Service() *serverFiles {
	return http.svc
}

func (http *httpFiles) WithLog() *httpFiles {
	http.svc.WithLog()
	return http
}

func (http *httpFiles) WithErrorHandler(handler ErrorHandler) *httpFiles {
	http.errorHandler = handler
	return http
}

func (http *httpFiles) SetRoutes(route *fiber.App) {
	route.Get("/api/v1/public/file/template", http.serveGetTemplate)
}
